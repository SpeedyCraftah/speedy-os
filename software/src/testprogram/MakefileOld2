GPP_PARAMS = -O2 -ffreestanding -Wall -Wextra -fno-exceptions -fno-rtti -fno-use-cxa-atexit -g -Wno-unused-variable -Wno-write-strings -Wno-unused-parameter
LINKER_PARAMS = -static-libgcc -ffreestanding -O2 -nostdlib -lgcc -g -Wl,--gc-sections

CRTBEGIN_OBJ:=$(shell i686-elf-g++ $(GPP_PARAMS) -print-file-name=crtbegin.o)
CRTEND_OBJ:=$(shell i686-elf-g++ $(GPP_PARAMS) -print-file-name=crtend.o)

PROGRAM_BIN := $(shell basename "$(CURDIR)").bin
GRUB_MOD_PATH := ../../../iso/boot/software/
LINKER_FILE := ../../linker.ld
CPP_FILES := $(shell find . -type f -name '*.cpp')
INCLUDE_BIN := $(shell find ../../include -type f -name '*.o')
compiledObjects := $(CPP_FILES)
objects := $(patsubst %.cpp,%.o,$(filter %.cpp,$(compiledObjects)))

%.o: %.cpp
	i686-elf-g++ $(GPP_PARAMS) -o $@ -c $< 

link: $(LINKER_FILE) $(objects)
	i686-elf-g++ -T $< -o $(PROGRAM_BIN) $(CRTBEGIN_OBJ) $(objects) $(INCLUDE_BIN) $(CRTEND_OBJ) $(LINKER_PARAMS)
	rm $(objects)

build: link

install: $(PROGRAM_BIN)
	cp $(PROGRAM_BIN) $(GRUB_MOD_PATH)

.NOTPARALLEL: clean
clean:
	rm $(shell find . -type f -name '*.o') $(shell find . -type f -name '*.bin')